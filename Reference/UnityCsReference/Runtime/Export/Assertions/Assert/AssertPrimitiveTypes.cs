// Unity C# reference source
// Copyright (c) Unity Technologies. For terms of use, see
// https://unity3d.com/legal/licenses/Unity_Reference_Only_License

// This file is generated by Tools/AssertGenerator, do not manually edit this file
using System;
using System.Diagnostics;
using UnityEngine;
using UnityEngine.Assertions.Comparers;

namespace UnityEngine.Assertions
{
    public static partial class Assert
    {
        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(sbyte expected, sbyte actual)
        {
            if (expected != actual)
                AreEqual<sbyte>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(sbyte expected, sbyte actual, string message)
        {
            if (expected != actual)
                AreEqual<sbyte>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(sbyte expected, sbyte actual)
        {
            if (expected == actual)
                AreNotEqual<sbyte>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(sbyte expected, sbyte actual, string message)
        {
            if (expected == actual)
                AreNotEqual<sbyte>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(byte expected, byte actual)
        {
            if (expected != actual)
                AreEqual<byte>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(byte expected, byte actual, string message)
        {
            if (expected != actual)
                AreEqual<byte>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(byte expected, byte actual)
        {
            if (expected == actual)
                AreNotEqual<byte>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(byte expected, byte actual, string message)
        {
            if (expected == actual)
                AreNotEqual<byte>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(char expected, char actual)
        {
            if (expected != actual)
                AreEqual<char>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(char expected, char actual, string message)
        {
            if (expected != actual)
                AreEqual<char>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(char expected, char actual)
        {
            if (expected == actual)
                AreNotEqual<char>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(char expected, char actual, string message)
        {
            if (expected == actual)
                AreNotEqual<char>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(short expected, short actual)
        {
            if (expected != actual)
                AreEqual<short>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(short expected, short actual, string message)
        {
            if (expected != actual)
                AreEqual<short>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(short expected, short actual)
        {
            if (expected == actual)
                AreNotEqual<short>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(short expected, short actual, string message)
        {
            if (expected == actual)
                AreNotEqual<short>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(ushort expected, ushort actual)
        {
            if (expected != actual)
                AreEqual<ushort>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(ushort expected, ushort actual, string message)
        {
            if (expected != actual)
                AreEqual<ushort>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(ushort expected, ushort actual)
        {
            if (expected == actual)
                AreNotEqual<ushort>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(ushort expected, ushort actual, string message)
        {
            if (expected == actual)
                AreNotEqual<ushort>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(int expected, int actual)
        {
            if (expected != actual)
                AreEqual<int>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(int expected, int actual, string message)
        {
            if (expected != actual)
                AreEqual<int>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(int expected, int actual)
        {
            if (expected == actual)
                AreNotEqual<int>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(int expected, int actual, string message)
        {
            if (expected == actual)
                AreNotEqual<int>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(uint expected, uint actual)
        {
            if (expected != actual)
                AreEqual<uint>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(uint expected, uint actual, string message)
        {
            if (expected != actual)
                AreEqual<uint>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(uint expected, uint actual)
        {
            if (expected == actual)
                AreNotEqual<uint>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(uint expected, uint actual, string message)
        {
            if (expected == actual)
                AreNotEqual<uint>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(long expected, long actual)
        {
            if (expected != actual)
                AreEqual<long>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(long expected, long actual, string message)
        {
            if (expected != actual)
                AreEqual<long>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(long expected, long actual)
        {
            if (expected == actual)
                AreNotEqual<long>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(long expected, long actual, string message)
        {
            if (expected == actual)
                AreNotEqual<long>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(ulong expected, ulong actual)
        {
            if (expected != actual)
                AreEqual<ulong>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreEqual(ulong expected, ulong actual, string message)
        {
            if (expected != actual)
                AreEqual<ulong>(expected, actual, message);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(ulong expected, ulong actual)
        {
            if (expected == actual)
                AreNotEqual<ulong>(expected, actual, null);
        }

        // This file is generated by Tools/AssertGenerator, do not manually edit this method
        [Conditional(UNITY_ASSERTIONS)]
        public static void AreNotEqual(ulong expected, ulong actual, string message)
        {
            if (expected == actual)
                AreNotEqual<ulong>(expected, actual, message);
        }
    }
}
